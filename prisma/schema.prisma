// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String  @id @default(cuid())
  email String  @unique
  name  String?
  // sessions  ChatSession[]
  password   String? // null if signed up via Google
  // provider   String   @default("credentials") // "credentials" | "google"
  // providerId String? // Google userId

  accounts  Account[]
  // sessions  Chat[]
  sessions  Session[]
  chats     Chat[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// model ChatSession {
model Chat {
  id        String    @id @default(cuid())
  title     String
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  messages  Message[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Message {
  id        String   @id @default(cuid())
  // session    ChatSession @relation(fields: [sessionId], references: [id])
  session   Chat     @relation(fields: [sessionId], references: [id])
  sessionId String
  sender    String    // "user"  | "ai"
  content   String
  createdAt DateTime @default(now())
}

// running migration command
// npx prisma migrate dev --name init
